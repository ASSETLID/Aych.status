#!/bin/bash

#set -x

trap 'echo you hit Ctrl-C/Ctrl-\, now exiting..; exit' SIGINT SIGQUIT

#################### Config Variables ########################
DEFAULTS=${DEFAULTS:-"/etc/default/ows"}

# Exit if the package is not installed
if [ -x "$DEFAULTS" ]; then
  echo "OWS not fully configured. Check $DEFAULTS"
  exit 0
fi

# Read configuration variable file if it is present
[ -r $DEFAULTS ] && . $DEFAULTS

######################################################################

OPAMROOT=${DATADIR}/opam-root
OPAMREPO=${DATADIR}/opam-repository
OPAMCOMP=${DATADIR}/opam-compilers

export OPAMROOT
export LANG=en_US
######################################################################

function daterange {
  local currentdate=$1
  local loopenddate=$(/bin/date --date "$2 1 day" +%Y-%m-%d)

  until [ "$currentdate" == "$loopenddate" ]
  do
    echo $currentdate
    currentdate=$(/bin/date --date "$currentdate 1 day" +%Y-%m-%d)
  done
}

################### Run Distcheck for all declared compilers versions ##########

function distcheck {

  local runopam=0
  local date=$(date --date "$1")
  local commit=$2
  local author=$3
  local title=$4
  local force=$5
  local dirname=${REPORTDIR}/$(date --date "$date" +%Y-%m-%d)/${commit}/

  echo "Commit $date"
  echo "Saving data in ${dirname}"
  mkdir -p ${REPORTDIR}/$(date --date "$date" +%Y-%m-%d)
  echo "${commit}" >> ${REPORTDIR}/$(date --date "$date" +%Y-%m-%d)/commits

  for version in ${VERSIONS}; do

    if [ ! -s ${dirname}/report-${version}.pef.gz ] || [ $force == 1 ]; then
      echo "Run opam config pef-universe"
      ${OPAM} config pef-universe ${OPAMOPTIONS} --switch ${version} > ${TMPDIR}/report-${version}.pef
      runopam=1
    else
      zcat ${dirname}/report-${version}.pef.gz > ${TMPDIR}/report-${version}.pef
    fi

    if [ -s ${TMPDIR}/report-${version}.pef ]; then
      if [ ! -s ${dirname}/report-${version}.yaml ] || [ $runopam == 1 ]; then
        runopam=0 #reset flag
        mkdir -p ${dirname}/${version}
        echo "ocaml-switch: ${version}" > ${dirname}/report-${version}.yaml
        echo "git-date: ${date}" >> ${dirname}/report-${version}.yaml
        echo "git-commit: ${commit}" >> ${dirname}/report-${version}.yaml
        echo "git-author: \"${author}\"" >> ${dirname}/report-${version}.yaml
        echo "git-title: |" >> ${dirname}/report-${version}.yaml
        echo " ${title}" >> ${dirname}/report-${version}.yaml
        echo "Running distcheck"
        ${DISTCHECK} --dot \
          --outdir ${dirname}/${version} pef://${TMPDIR}/report-${version}.pef \
          -m --summary -e -s -f >> ${dirname}/report-${version}.yaml
        mv ${TMPDIR}/report-${version}.pef ${dirname}/
        #gzip ${dirname}/report-${version}.yaml
        gzip -f ${dirname}/report-${version}.pef
      fi
    else
      rm ${TMPDIR}/report-${version}.pef
    fi
  done

}

######################################################################

function rewind_git {
  local commits=""
  local oneday=$(date --date "$1 +1 day")
  local limit="-n 1"
  if [ $2 = 1 ]; then
    limit=
  fi

  rm -f .git/index.lock
  if [ ! -z "$1" ]; then
    commits=$(git rev-list $limit --since="$1 1am" --until="$oneday" origin/master)
  else
    commits=$(git rev-list $limit origin/master)
  fi
  echo "${commits}"
}

function replay {
  local origin="2012-05-19"
  if [ ! -z $1 ]; then
    origin=$1
  fi
  local currentdate=`date +%Y-%m-%d`
  if [ ! -z $2 ]; then
    currentdate=$2
  fi
  local limit=$3
  local force=$4

  #git --git-dir ${OPAMREPO}/.git fetch origin &> /dev/null
  git --git-dir ${OPAMREPO}/.git checkout master &> /dev/null
  #git --git-dir ${OPAMREPO}/.git pull -a

  # Creation of opam-repository
  local range=$(daterange ${origin} ${currentdate})

  for date in $range; do
      local commits=$(rewind_git "$date" "$limit")
      echo "replay $date"
      echo "${REPORTDIR}/$(date --date "$date" +%Y-%m-%d)/commits"
      if [ ! -d ${REPORTDIR}/$(date --date "$date" +%Y-%m-%d) ]; then
        mkdir -p ${REPORTDIR}/$(date --date "$date" +%Y-%m-%d)
      fi
      if [ -f ${REPORTDIR}/$(date --date "$date" +%Y-%m-%d)/commits ]; then
        rm -f ${REPORTDIR}/$(date --date "$date" +%Y-%m-%d)/commits
      fi
      for commit in ${commits}; do
        echo "${commit}" >> ${REPORTDIR}/$(date --date "$date" +%Y-%m-%d)/commits
        (cd ${OPAMREPO} && \
        git reset ${commit} --hard && \
        git clean -dxf ) &> /dev/null
        ${OPAM} update ${OPAMOPTIONS} &> /dev/null
        local date=$(git show -s --format=%ci ${commit})
        local author=$(git show -s --format=%an ${commit})
        local title=$(git show -s --format=%s ${commit})
        distcheck "$date" "$commit" "$author" "$title" $force
      done
  done
}


################### Create a fake opam-repository with 'preinstalled' compilers
function setup {

  for v in ${VERSIONS}; do
    mkdir -p ${OPAMCOMP}/compilers/$v/$v/
    cat > ${OPAMCOMP}/compilers/$v/$v/$v.comp <<EOF
opam-version: "1"
version: "$v"
preinstalled: true
EOF
  done
  echo "0.9.0" > ${OPAMCOMP}/version

  ## Checkout/update the real opam-repository

  if [ ! -d ${OPAMREPO} ]; then
    git clone git://github.com/ocaml/opam-repository ${OPAMREPO}
  else
    ( cd ${OPAMREPO} && \
      git fetch && \
      git reset origin/master --hard && \
      git clean -dxf )
  fi

  ## Initialize OPAM

  yes no | ${OPAM} init ${OPAMOPTIONS} --comp=${VERSIONS##* } opam_compilers ${OPAMCOMP}
  ${OPAM} remote add ${OPAMOPTIONS} -p 0 opam_repository ${OPAMREPO}

  ## Small hack for opam to prefers the "faked' compilers

  ${OPAM} remote ${OPAMOPTIONS} remove opam_compilers
  ${OPAM} remote ${OPAMOPTIONS} add -p 20 opam_compilers ${OPAMCOMP}
  ${OPAM} update ${OPAMOPTIONS}

  for version in ${VERSIONS}; do
    ${OPAM} switch ${OPAMOPTIONS} ${version}
  done
}

function html {
  mkdir -f $TARGETDIR
  cp -a js css fonts static/* $TARGETDIR
}

##########################

# Usage info
show_help() {
cat << EOF
Usage: ${0##*/} [-hvs] [FROM] [TO]
Bootstrap and update opam repositories for OWS.

    -h          display this help and exit
    -s          setup the a local opam repository
    -v          verbose mode. Can be used multiple times for increased
                verbosity.
    -t          get the last commits for today
    -a          consider all commits (only the most recent is considered by default)

FROM and TO define the interval to consider. Bu default TO is set to the
current date and FROM is 10 days ago. Opam opened their from shop the 2012-05-19.

Ex: ${0##*/} 2015-03-12 2015-03-13

EOF
}

# Initialize our own variables:
from=""
to=""
verbose=0
init=0
today=0
limit=0
force=0

OPTIND=1
while getopts "hvstaf" opt; do
    case "$opt" in
        h)
            show_help
            exit 0
            ;;
        v)  verbose=$((verbose+1))
            ;;
        s)  init=1
            ;;
        t)  today=1
            ;;
        f)  force=1
            ;;
        a)  limit=1
            ;;
        '?')
            show_help >&2
            exit 1
            ;;
    esac
done
shift "$((OPTIND-1))" # Shift off the options and optional --.

if [ $init == 1 ]; then
  echo "Init local Opam repository in ${OPAMROOT}"
  if [ ! -d ${OPAMROOT} ]; then
    setup
    html
  fi
fi

from="2012-05-19"
#from="2012-08-24"
#to="2012-10-19"
from="2015-02-27"
if [ $today == 1 ]; then
  from=$(/bin/date +%Y-%m-%d)
else
  from=${1:-$(/bin/date --date "10 days ago" +%Y-%m-%d)}
fi
to=${2:-$(/bin/date +%Y-%m-%d)}

echo "Updating Opam repository from $from to $to"

cd ${OPAMREPO} && replay $from $to $limit $force


